add_executable(td_handover_control 				"td_handover_control.cpp" 				"${MavNRC_GEO}")
add_executable(td_landing_routine 				"td_landing_routine.cpp" 				"${MavNRC_GEO}")
add_executable(td_lp_manager 					"td_lp_manager.cpp" 					"${MavNRC_GEO}")
add_executable(td_on_route 						"td_on_route.cpp" 						"${MavNRC_GEO}")
add_executable(td_reposition_timer 				"td_reposition_timer.cpp" 				"${MavNRC_GEO}")
add_executable(td_stabilize 					"td_stabilize.cpp" 						"${MavNRC_GEO}")
add_executable(td_command_reposition 			"td_command_reposition.cpp" 			"${MavNRC_GEO}")
add_executable(td_mission_initialization		"td_mission_initialization.cpp" 		"${MavNRC_GEO}")
add_executable(td_landing 						"td_landing.cpp" 						"${MavNRC_GEO}")
add_executable(td_lp_reposition 				"td_lp_reposition.cpp" 					"${MavNRC_GEO}")
add_executable(td_blocking_input 				"td_blocking_input.cpp" 				"${MavNRC_GEO}")
add_executable(td_udp_output_gcs 				"td_udp_output_gcs.cpp" 				"${MavNRC_GEO}")
add_executable(td_udp_output_fcc 				"td_udp_output_fcc.cpp" 				"${MavNRC_GEO}")
add_executable(td_udp_input 					"td_udp_input.cpp" 						"${MavNRC_GEO}")
add_executable(td_udp_input_async 				"td_udp_input_async.cpp" 				"${MavNRC_GEO}")
add_executable(td_shared_memory_output 			"td_shared_memory_output.cpp" 			"${MavNRC_GEO}")
add_executable(td_shared_memory_input 			"td_shared_memory_input.cpp" 			"${MavNRC_GEO}")
add_executable(td_asra_shared_memory_input		"td_asra_shared_memory_input.cpp" 		"${MavNRC_GEO}" "${SHARED_MEM}")
add_executable(td_landing_achieved_demand_input "td_landing_achieved_demand_input.cpp" 	"${MavNRC_GEO}" "${SHARED_MEM}")
add_executable(td_pilot_takeover_input			"td_pilot_takeover_input.cpp" 			"${MavNRC_GEO}" "${SHARED_MEM}")
add_executable(td_aircraft_state_input			"td_aircraft_state_input.cpp" 			"${MavNRC_GEO}" "${SHARED_MEM}")
add_executable(td_cache_input					"td_cache_input.cpp" 					"${MavNRC_GEO}")
add_executable(td_takeoff						"td_takeoff.cpp" 						"${MavNRC_GEO}")
add_executable(td_supervisor_udp_input			"td_supervisor_udp_input.cpp"			"${MavNRC_GEO}" "${RUDP}")
add_executable(td_handle_waypoint				"td_handle_waypoint.cpp" 				"${MavNRC_GEO}")
add_executable(td_supervisor					"td_supervisor.cpp" 					"${MavNRC_GEO}")
add_executable(td_packet_builder_gcs			"td_packet_builder_gcs.cpp" 			"${MavNRC_GEO}")
add_executable(td_packet_builder_boss	        "td_packet_builder_boss.cpp" 		    "${MavNRC_GEO}")
add_executable(td_packet_builder_bool	        "td_packet_builder_bool.cpp" 		    "${MavNRC_GEO}")
add_executable(td_packet_builder_landing_point	"td_packet_builder_landing_point.cpp" 	"${MavNRC_GEO}")
add_executable(td_rudp_output_mavnrc 			"td_rudp_output_mavnrc.cpp" 			"${MavNRC_GEO}" "${RUDP}")
add_executable(td_polling_condition_input_test	"td_polling_condition_input_test.cpp" 	"${MavNRC_GEO}")

target_include_directories(td_handover_control 				PUBLIC ${includes_list})
target_include_directories(td_landing_routine 				PUBLIC ${includes_list})
target_include_directories(td_lp_manager 					PUBLIC ${includes_list})
target_include_directories(td_on_route 						PUBLIC ${includes_list})
target_include_directories(td_reposition_timer 				PUBLIC ${includes_list})
target_include_directories(td_stabilize 					PUBLIC ${includes_list})
target_include_directories(td_command_reposition 			PUBLIC ${includes_list})
target_include_directories(td_mission_initialization		PUBLIC ${includes_list})
target_include_directories(td_landing 						PUBLIC ${includes_list})
target_include_directories(td_lp_reposition 				PUBLIC ${includes_list})
target_include_directories(td_handle_waypoint				PUBLIC ${includes_list})

target_include_directories(td_blocking_input 				PUBLIC ${includes_list})
target_include_directories(td_udp_output_gcs 				PUBLIC ${includes_list})
target_include_directories(td_udp_output_fcc 				PUBLIC ${includes_list})
target_include_directories(td_udp_input 					PUBLIC ${includes_list})
target_include_directories(td_udp_input_async 				PUBLIC ${includes_list})
target_include_directories(td_shared_memory_output			PUBLIC ${includes_list})
target_include_directories(td_shared_memory_input           PUBLIC ${includes_list})
target_include_directories(td_asra_shared_memory_input      PUBLIC ${includes_list})
target_include_directories(td_landing_achieved_demand_input PUBLIC ${includes_list})
target_include_directories(td_pilot_takeover_input          PUBLIC ${includes_list})
target_include_directories(td_aircraft_state_input          PUBLIC ${includes_list})
target_include_directories(td_cache_input		          	PUBLIC ${includes_list})
target_include_directories(td_takeoff			          	PUBLIC ${includes_list})
target_include_directories(td_supervisor_udp_input         	PUBLIC ${includes_list})
target_include_directories(td_supervisor		         	PUBLIC ${includes_list})
target_include_directories(td_packet_builder_gcs		    PUBLIC ${includes_list})
target_include_directories(td_packet_builder_boss		    PUBLIC ${includes_list})
target_include_directories(td_packet_builder_bool		    PUBLIC ${includes_list})
target_include_directories(td_packet_builder_landing_point	PUBLIC ${includes_list})
target_include_directories(td_rudp_output_mavnrc			PUBLIC ${includes_list})
target_include_directories(td_polling_condition_input_test	PUBLIC ${includes_list})


target_compile_definitions(td_blocking_input 				PUBLIC RT_LINUX RT_DEVS)
target_compile_definitions(td_udp_output_gcs 				PUBLIC RT_LINUX RT_DEVS)
target_compile_definitions(td_udp_output_fcc 				PUBLIC RT_LINUX RT_DEVS)
target_compile_definitions(td_udp_input 					PUBLIC RT_LINUX RT_DEVS)
target_compile_definitions(td_udp_input_async 				PUBLIC RT_LINUX RT_DEVS)
target_compile_definitions(td_shared_memory_output			PUBLIC RT_LINUX RT_DEVS)
target_compile_definitions(td_shared_memory_input           PUBLIC RT_LINUX RT_DEVS)
target_compile_definitions(td_asra_shared_memory_input      PUBLIC RT_LINUX RT_DEVS)
target_compile_definitions(td_landing_achieved_demand_input PUBLIC RT_LINUX RT_DEVS)
target_compile_definitions(td_pilot_takeover_input          PUBLIC RT_LINUX RT_DEVS)
target_compile_definitions(td_aircraft_state_input          PUBLIC RT_LINUX RT_DEVS)
target_compile_definitions(td_supervisor_udp_input          PUBLIC RT_LINUX RT_DEVS)
target_compile_definitions(td_rudp_output_mavnrc	        PUBLIC RT_LINUX RT_DEVS)

target_link_libraries(td_handover_control 				${Boost_LIBRARIES})
target_link_libraries(td_landing_routine 				${Boost_LIBRARIES})
target_link_libraries(td_lp_manager 					${Boost_LIBRARIES})
target_link_libraries(td_on_route	 					${Boost_LIBRARIES})
target_link_libraries(td_reposition_timer 				${Boost_LIBRARIES})
target_link_libraries(td_stabilize 						${Boost_LIBRARIES})
target_link_libraries(td_command_reposition 			${Boost_LIBRARIES})
target_link_libraries(td_mission_initialization			${Boost_LIBRARIES})
target_link_libraries(td_landing 						${Boost_LIBRARIES})
target_link_libraries(td_lp_reposition 					${Boost_LIBRARIES})
target_link_libraries(td_blocking_input 				${Boost_LIBRARIES})
target_link_libraries(td_udp_output_gcs 				${Boost_LIBRARIES})
target_link_libraries(td_udp_output_fcc 				${Boost_LIBRARIES})
target_link_libraries(td_udp_input 						${Boost_LIBRARIES})
target_link_libraries(td_udp_input_async 				${Boost_LIBRARIES})
target_link_libraries(td_shared_memory_output 			${Boost_LIBRARIES} -lrt)
target_link_libraries(td_shared_memory_input 			${Boost_LIBRARIES} -lrt)
target_link_libraries(td_asra_shared_memory_input 		${Boost_LIBRARIES} -lrt)
target_link_libraries(td_landing_achieved_demand_input 	${Boost_LIBRARIES} -lrt)
target_link_libraries(td_pilot_takeover_input 			${Boost_LIBRARIES} -lrt)
target_link_libraries(td_aircraft_state_input 			${Boost_LIBRARIES} -lrt)
target_link_libraries(td_cache_input		 			${Boost_LIBRARIES})
target_link_libraries(td_takeoff			 			${Boost_LIBRARIES})
target_link_libraries(td_supervisor_udp_input 			${Boost_LIBRARIES})
target_link_libraries(td_handle_waypoint	 			${Boost_LIBRARIES})
target_link_libraries(td_supervisor			 			${Boost_LIBRARIES})
target_link_libraries(td_packet_builder_gcs 		    ${Boost_LIBRARIES})
target_link_libraries(td_packet_builder_boss 		    ${Boost_LIBRARIES})
target_link_libraries(td_packet_builder_bool 		    ${Boost_LIBRARIES})
target_link_libraries(td_packet_builder_landing_point 	${Boost_LIBRARIES})
target_link_libraries(td_rudp_output_mavnrc			 	${Boost_LIBRARIES})
target_link_libraries(td_polling_condition_input_test 	${Boost_LIBRARIES})
